/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td01: td01 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD01";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp TAB>;
        };

        td02: td02 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD02";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&mo 1>;
        };

        tdCopy: tdCopy {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCOPY";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp C>, <&kp K_COPY>;
        };

        tdPaste: tdPaste {
            compatible = "zmk,behavior-tap-dance";
            label = "TDPASTE";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp K_PASTE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&none  &kp Q  &kp W  &kp F       &kp P  &kp B            &kp J      &kp L      &kp U      &kp Y    &kp SQT   &none
&none  &kp A  &kp R  &kp S       &kp T  &kp G            &kp M      &kp N      &kp E      &kp I    &kp O     &none
&none  &kp Z  &kp X  &tdCopy     &kp D  &tdPaste         &kp K      &kp H      &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LSHIFT  &td01  &kp BACKSPACE    &kp ENTER  &kp SPACE  &kp LCTRL
            >;
        };

        numpad_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Numpad";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7        &kp N8        &kp N9        &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS         &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL        &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp EXCLAMATION  &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans           &kp RALT
            >;
        };
    };
};
