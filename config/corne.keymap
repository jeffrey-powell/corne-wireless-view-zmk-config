/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tdLayer2and3: tdLayer2and3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TDLAYER2AND3";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&lt 3 TAB>;

            tapping-term-ms = <175>;
        };

        tdLayer1: tdLayer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TDLAYER1";
            #binding-cells = <0>;
            bindings = <&lt 1 BACKSPACE>, <&mt BACKSPACE LC(BACKSPACE)>;

            tapping-term-ms = <175>;
        };

        tdCopy: tdCopy {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCOPY";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp C>, <&kp LC(C)>;
        };

        tdPaste: tdPaste {
            compatible = "zmk,behavior-tap-dance";
            label = "TDPASTE";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LC(V)>;

            tapping-term-ms = <175>;
        };

        tdUndo: tdUndo {
            compatible = "zmk,behavior-tap-dance";
            label = "TDUNDO";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp LC(Z)>;

            tapping-term-ms = <175>;
        };

        tdcut: tdcut {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCUT";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp LC(X)>;

            tapping-term-ms = <175>;
        };

        tdLayer3: tdLayer3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TDLAYER3";
            #binding-cells = <0>;
            bindings = <&lt 3 ENTER>;
            tapping-term-ms = <175>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&none  &kp Q    &kp W   &kp F       &kp P          &kp B        &kp J      &kp L      &kp U      &kp Y    &kp SQT   &none
&none  &kp A    &kp R   &kp S       &kp T          &kp G        &kp M      &kp N      &kp E      &kp I    &kp O     &none
&none  &tdUndo  &tdcut  &tdCopy     &kp D          &tdPaste     &kp K      &kp H      &kp COMMA  &kp DOT  &kp FSLH  &none
                        &kp LSHIFT  &tdLayer2and3  &tdLayer1    &tdLayer3  &kp SPACE  &kp LCTRL
            >;
        };

        numpad_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Numpad";
            bindings = <
&trans  &kp ESCAPE   &kp F7  &kp F8  &kp F9  &kp F10    &kp EQUAL   &kp N7        &kp N8        &kp N9        &kp ASTRK    &trans
&trans  &kp LA(TAB)  &kp F4  &kp F5  &kp F6  &kp F11    &kp PERIOD  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS    &trans
&trans  &kp LG(TAB)  &kp F1  &kp F2  &kp F3  &kp F12    &kp N0      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_PLUS  &trans
                             &trans  &trans  &trans     &trans      &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp LA(TAB)  &kp LA(F4)  &kp ESCAPE  &kp BACKSLASH   &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp SEMICOLON   &trans
&trans  &kp TILDE    &trans      &trans      &kp PIPE        &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp COLON       &trans
&trans  &kp LGUI     &trans      &trans      &kp UNDERSCORE  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp UNDERSCORE  &trans
                                 &trans      &trans          &trans                  &trans                 &trans           &trans
            >;
        };

        arrows {
            bindings = <
&trans  &kp DELETE    &kp HOME  &kp UP_ARROW  &kp END    &trans           &kp LC(LA(DELETE))  &kp LG(L)  &kp LG(R)  &trans  &trans  &trans
&trans  &kp LC(LEFT)  &kp LEFT  &kp DOWN      &kp RIGHT  &kp LC(RIGHT)    &trans              &trans     &trans     &trans  &trans  &trans
&trans  &trans        &trans    &trans        &trans     &trans           &trans              &trans     &trans     &trans  &trans  &trans
                                &trans        &trans     &trans           &trans              &trans     &trans
            >;
        };
    };
};
